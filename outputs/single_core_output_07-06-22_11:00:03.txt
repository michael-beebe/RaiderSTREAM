=======================================================================================
                               SINGLE CORE RUNS
=======================================================================================
------------------------------------
         'Original' STREAM
------------------------------------
FAILED TO RUN!


------------------------------------
              OpenMP
------------------------------------
---------------------------------------------------------------------------------------
STREAM version $Revision: 5.10 $
---------------------------------------------------------------------------------------
This system uses 8 bytes per array element.
---------------------------------------------------------------------------------------
Array size = 2500000 (elements), Offset = 0 (elements)
Memory per array = 19.1 MiB (= 0.0 GiB).
Total memory required = 57.2 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
---------------------------------------------------------------------------------------
Number of Threads requested = 64
Number of Threads counted = 64
---------------------------------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 194 microseconds.
   (= 194 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
---------------------------------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
---------------------------------------------------------------------------------------
Function	Best Rate MB/s	   Avg time	   Min time	   Max time
Copy:		    158724.8	   0.008528	   0.000252	   0.018368
Scale:		    202135.1	   0.005155	   0.000198	   0.012091
Add:		    284359.6	   0.004710	   0.000211	   0.018038
Triad:		    239903.0	   0.004404	   0.000250	   0.012201
GATHER Copy:	     29720.5	   0.008843	   0.001346	   0.014967
GATHER Scale:	     25396.9	   0.009505	   0.001575	   0.015201
GATHER Add:	     21803.7	   0.011165	   0.002752	   0.021511
GATHER Triad:	     24612.1	   0.009528	   0.002438	   0.015025
SCATTER Copy:	     20030.1	   0.010323	   0.001997	   0.020245
SCATTER Scale:	     19295.2	   0.008554	   0.002073	   0.020052
SCATTER Add:	     32501.4	   0.008509	   0.001846	   0.015770
SCATTER Triad:	     31827.3	   0.011373	   0.001885	   0.021768
---------------------------------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all arrays
Results Validation Verbose Results: 
    Expected a(1), b(1), c(1): 383502118465768154754829359194832896.000000 76700423693153627261617057097056256.000000 102267231590871509164404100699258880.000000 
    Observed a(1), b(1), c(1): 383502118465768154754829359194832896.000000 76700423693153627261617057097056256.000000 102267231590871509164404100699258880.000000 
    Rel Errors on a, b, c:     0.000000e+00 0.000000e+00 0.000000e+00 
---------------------------------------------------------------------------------------


------------------------------------
               MPI
------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Total Aggregate Array size = 2500000 (elements)
Total Aggregate Memory per array = 19.1 MiB (= 0.0 GiB).
Total Aggregate memory required = 57.2 MiB (= 0.1 GiB).
Data is distributed across 1 MPI ranks
   Array size per MPI rank = 2500000 (elements)
   Memory per array per MPI rank = 19.1 MiB (= 0.0 GiB).
   Total memory per MPI rank = 57.2 MiB (= 0.1 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
The SCALAR value used for this run is 0.420000
-------------------------------------------------------------
Number of Threads requested for each MPI rank = 2
Number of Threads counted for rank 0 = 2
-------------------------------------------------------------
Your timer granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 3230 microseconds.
   (= 3230 timer ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 timer ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
VERBOSE: total setup time for rank 0 = 1.568795 seconds
-------------------------------------------------------------
Function	Best Rate MB/s	Avg time	Min time	Max time
Copy:		    12539.0     0.003204     0.003190     0.003235
Scale:		    11186.7     0.003635     0.003576     0.004075
Add:		    13819.6     0.004418     0.004342     0.004973
Triad:		    12536.5     0.004792     0.004786     0.004804
GATHER Copy:	     1914.1     0.021128     0.020898     0.021701
GATHER Scale:	     1541.8     0.027188     0.025943     0.028340
GATHER Add:	     1036.5     0.058334     0.057888     0.058609
GATHER Triad:	      956.6     0.062927     0.062721     0.063243
SCATTER Copy:	     2682.8     0.015737     0.014910     0.016798
SCATTER Scale:	     3110.1     0.013107     0.012861     0.013783
SCATTER Add:	     4428.8     0.013709     0.013548     0.014473
SCATTER Triad:	     4424.6     0.013788     0.013561     0.014554
-------------------------------------------------------------
aj bc cj part 1: 36318856, 36318864, 49204815
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
aj bc cj part 1: 0, 0, 0
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
aj bc cj part 1: 0, 0, 0
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
aj bc cj part 1: 0, 0, 0
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
aj bc cj part 1: 0, 0, 0
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
aj bc cj part 1: 0, 0, 0
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
aj bc cj part 1: 0, 0, 0
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
aj bc cj part 1: 0, 0, 0
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
aj bc cj part 1: 0, 0, 0
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
aj bc cj part 1: 0, 0, 0
aj bc cj part 2: 0, 0, 0
aj bc cj part 3: 0, 0, 0
VERBOSE: rank 0, AvgErrors 0.000000e+00 0.000000e+00 0.000000e+00
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Results Validation Verbose Results: 
    Expected a(1), b(1), c(1): 3.258140 1.346339 4.551907 
    Observed a(1), b(1), c(1): 3.258140 1.346339 4.551907 
    Rel Errors on a, b, c:     0.000000e+00 0.000000e+00 0.000000e+00 
-------------------------------------------------------------
VERBOSE: total shutdown time for rank 0 = 0.013173 seconds


------------------------------------
             OpenSHMEM
------------------------------------
FAILED TO RUN!
